####################
# MAPPING OF TYPES
####################
# Mapping between DSpace repository types and BibTeX types
# each key starts with 'bibtextarget.of.' and is followed by either a DSpace type, or a by a DSpace type followed by '.' followed 
# by a subtype
# The corresponding value is the bibtex to which items with given type (and subtype) are exported
# An DSpace item i will be exported as a bibtex entry with the following type r: Let t and st be the type
# and subtype, respectively, of i. If the key 
# bibtextarget.of.[t].[st] exists, the corresponding value is the target type r.
# If not, the target type r is the value corresponding to the key
# bibtextarget.of.[t].
bibtextarget.of.Journal\ Contribution  = article
bibtextarget.of.Book\ Section          = inbook
bibtextarget.of.Book                   = book
bibtextarget.of.Conference\ Material   = inproceedings
bibtextarget.of.Proceedings\ Paper     = inproceedings
bibtextarget.of.Theses\ and\ Dissertations.Master\ thesis = mastersthesis
bibtextarget.of.Theses\ and\ Dissertations.PhD\ theses = phdthesis

bibtextarget.of.Research\ Report       = inproceedings

####################
# FIELDS OF TYPES
####################
# Fields used in exported BibTeX entries
# each key starts with 'fields.of.' and is followed by a BibTeX type
# The value is a comma separated list of BibTeX fields that will be
# written as part of the exported BibTeX entry.
fields.of.article   = \
    author, title, journal, volume, number, year, pages
fields.of.inbook    = \
    author, editor, title, booktitle, publisher, year, pages, volume, number, series
fields.of.book      = \
    author, editor, title, publisher, year, volume, number, series
fields.of.inproceedings = \
    author, editor, title, booktitle, year, pages, publisher, volume, number, series
fields.of.mastersthesis = \
    author, title, school, year
fields.of.phdthesis = \
    author, title, school, year

####################
# DEFINITION OF FIELDS
####################
# Defines how a BibTeX field is structured
# each key starts with 'definition.of.' and is followed by a BibTex field, optionally followed by DSpace type, followed by . 
# followed by a DSpace subtype.
#    * The value for the first existing key, in the order given here, is used as the definition:
     * 1. definition.of.[bibtexField].[dcType].[dcSubtype]
     * 2. definition.of.[bibtexField].[dcType]
     * 3. definition.of.[bibtexField]

# If the value contains a double @ (@@), then the part before the first @@ is considered as the OPERATION, and the part
# after the first @@ is considered as the OPERAND. The only operation currently supported, is JOIN. The JOIN operation
# has an additional argument that specifies the string literal used to put between that metadatavalues.
# If the value does not contain a @@, all DC metadata fields are replaced by their first value, while string literals enclosed by an @-sign are copied to the bibtexfield literally.
definition.of.author    = JOIN( and ) @@ \
    dc.contributor.author
definition.of.title     = dc.title
definition.of.journal   = dc.bibliographicCitation.title
definition.of.year      = dc.date.issued
definition.of.pages     = dc.bibliographicCitation.stpage @--@ dc.bibliographicCitation.endpage
definition.of.booktitle = dc.bibliographicCitation.title
definition.of.publisher = dc.publisher
definition.of.volume    = dc.bibliographicCitation.volume
definition.of.number    = dc.bibliographicCitation.issue
definition.of.editor    = JOIN( and ) @@\
    dc.contributor.editor
definition.of.series    = dc.relation.ispartofseries
definition.of.school    = dc.publisher




